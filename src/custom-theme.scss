
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@import '@angular/material/theming';
@import "./functions";
@import "@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$md-standard: (
  50 : #fbe8e8,
  100 : #f4c5c5,
  200 : #ed9f9f,
  300 : #e57878,
  400 : #e05b5b,
  500 : #da3e3e,
  600 : #d63838,
  700 : #d03030,
  800 : #cb2828,
  900 : #c21b1b,
  A100 : #fff7f7,
  A200 : #ffc4c4,
  A400 : #ff9191,
  A700 : #ff7878,
  contrast: (
      50 : #000000,
      100 : #000000,
      200 : #000000,
      300 : #000000,
      400 : #000000,
      500 : #ffffff,
      600 : #ffffff,
      700 : #ffffff,
      800 : #ffffff,
      900 : #ffffff,
      A100 : #000000,
      A200 : #000000,
      A400 : #000000,
      A700 : #000000,
  )
);

$md-standard-acc: (
    50 : #e5f9f4,
    100 : #bef1e5,
    200 : #93e8d3,
    300 : #67dfc1,
    400 : #47d8b4,
    500 : #26d1a7,
    600 : #22cc9f,
    700 : #1cc696,
    800 : #17c08c,
    900 : #0db57c,
    A100 : #e2fff4,
    A200 : #afffe1,
    A400 : #7cffce,
    A700 : #63ffc5,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #666666,
        500 : #666666,
        600 : #666666,
        700 : #000000,
        800 : #000000,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);


$custom-primary:  mat-palette($md-standard);
$custom-accent:  mat-palette($md-standard, 800, A100, A200, A400);
$custom-warn:    mat-palette($mat-red);

$custom-theme: mat-light-theme($custom-primary, $custom-accent, $custom-warn);
@include angular-material-theme($custom-theme);

$primary: mat-color($custom-primary);

$primary-lighter: mat-light-theme($custom-primary, $custom-accent, $custom-warn);

// ? 2. Define an alternate dark theme.
$dark-primary: mat-palette($md-standard, 900);
$dark-accent: mat-palette($md-standard, A300, A400, A500);
$dark-warn: mat-palette($mat-deep-orange);
$primary-darker: mat-dark-theme(
  (
    color: (
      primary: $dark-primary,
      accent: $dark-accent,
      warn: $dark-warn,
    ),
  )
);


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$allmarbles-primary: mat.define-palette(mat.$indigo-palette);
$allmarbles-accent: mat.define-palette(mat.$pink-palette, #c12525, #d62929, #de5454);

// The warn palette is optional (defaults to red).
$allmarbles-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$allmarbles-theme: mat.define-light-theme((
  color: (
    primary: $allmarbles-primary,
    accent: $allmarbles-accent,
    warn: $allmarbles-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
/*@include mat.all-component-themes($allmarbles-theme);*/

// Define a custom mixin that takes in the current theme
@mixin define-css-classes($theme) {
  // Parse the theme and create variables for each color in the pallete
  @include angular-material-theme($theme);

  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  // CSS THEME-DEPENDENT-STYLES ARE HERE:
  .theme-dependent-colors {
      background: mat-color($primary);
      color: mat-color($accent);
  }
}

// Set variables to whatever colors you want for your app
$dark-theme-primary: mat-palette($md-standard);
$dark-theme-accent: mat-palette($mat-light-blue);
$dark-theme-warn: mat-palette($mat-red);

$dark-theme: mat-dark-theme(
    $dark-theme-primary,
    $dark-theme-accent,
    $dark-theme-warn
);

// You have to define one of those for every theme you offer

$light-theme: mat-light-theme($custom-primary, $custom-accent, $custom-warn);

.dark-theme {
  @include angular-material-theme($dark-theme);
  @include generate-theme-vars($dark-theme);
}

.light-theme {
  @include angular-material-theme($light-theme);
  @include generate-theme-vars($light-theme);
}

$app-themes: (
        indigo-pink : (primary-base: $mat-indigo, accent-base: $mat-pink),
        deeppurple-amber: (primary-base: $mat-deep-purple, accent-base: $mat-amber),
        pink-bluegrey : (primary-base: $mat-pink, accent-base: $mat-blue-gray, is-dark: true),
        purple-green : (primary-base: $mat-purple, accent-base: $mat-green, is-dark: true),
        standard: (primary-base: $md-standard, accent-base: $md-standard-acc)
);

@each $css-class, $theme in $app-themes {
    $primary: if(map-has-key($theme, primary), map-get($theme, primary), mat-palette(map-get($theme, primary-base)));

    $accent: if(map-has-key($theme, accent), map-get($theme, accent), mat-palette(map-get($theme, accent-base)));

    $warn: if(map-has-key($theme, warn), map-get($theme, warn), mat-palette(
            if(map-has-key($theme, warn-base), map-get($theme, warn-base), $mat-red)
    ));

    .#{$css-class} {
        @include define-css-classes(mat-light-theme($primary, $accent, $warn));
    }

    .#{$css-class}-dark {
        @include define-css-classes(mat-dark-theme($primary, $accent, $warn));
    }

    .theme-primary.#{$css-class} {
        background-color: mat-color($primary);
    }
}